//
// Created by Robbe Nooyens on 17/11/2022.
//

#include "Playfair.h"
#include <algorithm>
#include <cmath>
#include <random>
#include <utility>
#include <random>
#include <sstream>
#include <iostream>
#include <regex>
#include "logQ.h"


using namespace std;

double Playfair::getLogQTest(const string& decoded) {
    int i;
    char temp[4];
    double score = 0;
    for (i=0;i<decoded.length()-3;i++){
        temp[0]=decoded[i]-'A';
        temp[1]=decoded[i+1]-'A';
        temp[2]=decoded[i+2]-'A';
        temp[3]=decoded[i+3]-'A';
        score += qgram[17576*temp[0] + 676*temp[1] + 26*temp[2] + temp[3]];
    }
    return score;
}

void Playfair::transform(const string &config, char &c1, char &c2, int sign) {
    auto index1 = config.find(c1);
    auto index2 = config.find(c2);
    if(index1 == string::npos or index2 == string::npos)
        return;
    assert(index1 != string::npos);
    assert(index2 != string::npos);
    int row1 = (int) index1/5, col1 = (int) index1%5;
    int row2 = (int) index2/5, col2 = (int) index2%5;
    assert(!(row1 == row2 && col1 == col2));
    if (row1 == row2) {
        col1 = (col1+sign+5)%5;
        col2 = (col2+sign+5)%5;
    } else if (col1 == col2) {
        row1 = (row1+sign+5)%5;
        row2 = (row2+sign+5)%5;
    } else {
        int tempcol = col1;
        col1 = col2;
        col2 = tempcol;
    }
    index1 = row1*5+col1;
    index2 = row2*5+col2;
    c1 = config.at(index1);
    c2 = config.at(index2);
}

string Playfair::decode(const string &config, const string & cipher) {
    stringstream decoded;
    bool digram = false;
    char c1, c2;
    for (char const c: cipher) {
        if (!digram) {
            c1 = c;
        } else {
            c2 = c;
            transform(config, c1, c2, -1);
            decoded << c1 << c2;
        }
        digram = !digram;
    }
    string decodedStr = decoded.str();
    for(int i = 1; i < decodedStr.length()-1; i++) {
        if(decodedStr[i] == 'X') {
            if(decodedStr[i-1] == decodedStr[i+1]) {
                decodedStr.erase(i, 1);
            }
        }
    }
    return decodedStr;
}

string Playfair::encode(const string &config, const string& input) {
    stringstream encoded;
    bool digram = false;
    char c1, c2;
    for (char const &c: input) {
        if (!digram) {
            c1 = c;
            digram = true;
        } else {
            if (c1 == c) {
                c2 = 'X';
                transform(config, c1, c2, 1);
                encoded << c1 << c2;
                c1 = c;
            } else {
                c2 = c;
                digram = false;
                transform(config, c1, c2, 1);
                encoded << c1 << c2;
            }
        }
    }
    return encoded.str();
}

double Playfair::energy(const string& config, const string &cipher) {
    return getLogQTest(decode(config, cipher));
}

void progressBar(double progress, double remaining, const string& bestString, double bestScore) {
    int barWidth = 70;
    std::cout << "[";
    int pos = (int) (barWidth * progress);
    for (int i = 0; i < barWidth; ++i) {
        if (i < pos) std::cout << "=";
        else if (i == pos) std::cout << ">";
        else std::cout << " ";
    }
    std::cout << "] " << int(progress * 100.0) << " % ";
    int sec = (int) (remaining/1000);
    tm time{};
    time.tm_hour = sec / 3600;
    sec = sec % 3600;
    time.tm_min = sec / 60;
    sec = sec % 60;
    time.tm_sec = sec;
    char timestr[200];
    strftime(timestr, 200, "%H:%M:%S", &time);
    cout << " " << string(timestr) << "\t{" << bestString << ":" << bestScore << "}" << "\r";
    std::cout.flush();
}

void Playfair::swap(string& s, int index1, int index2) {
    assert(index1 != index2);
    char c1 = s[index1];
    s[index1] = s[index2];
    s[index2] = c1;
}


// IT IS A TRUTH UNIVERSALLY ACKNOWLEDGED THAT ASENFLE MINENPMSSESSIONOFAGOODFORTUNEMUSSBAENWINTOFAWIFEHOWEVERLITTLEKNOWNTHEFEEL
// ITISATLUTHUNIMERSALLYACKNGOLEDGEDTHATASINGLEMANINPOSSESSIONOFAWOODFORTUNEMUSTBEINWANTGFAWIFEHOWEVELZITTLEYNOWNTHEFEELINGSORMIEWSOVSUCHAMANMAYBEONHISVIRSTENTERINGANEIGHBOULHOODTHISTRUTHISSOWELLFIXEDINTHEMINDSOFTHESULROUNDINGFAFILIESTHATHEISCONSIDEREDASTHERIGHTFULPROPERTYOVSOMEONEORGTHEROFTHEIRDAUGHTERSFYDEARMRBENNETSAIDHISLADYTGHIMONEDAYHAVEQOUHEARDTHATNETHERFIEZDPARKISLETATLASTMRBENNETREPLIEDTHATHEHADNGTBUTITISRETULNEDSHEFORMRSLONGHASIUSTBEENHEREANDSHETGZDMEALLABOUTITMRBENPNETMADENGANSWELDONGTYOUWANTTGKNGOWHOHASTAYENITCRIEDHISWIVEIMPATIENTLYYOUWANTTGTELLMEANDIHAVENOOBIECTIONTOHEARINGITTHISOASINVITATIONENOUGHWHYMYDEARYOUMUSTKNOWMRSLONGSAYSTHATNETHERVIELDISTAKENBYAYOUNGMANOFLARGEFORTUNEFROMTHENORTHOFENGLANDTHATHECAMEDOWNONMONDAYINACHAISEANDFOULTGSEETHEPLACEANDOASSOMUCHDELIGHTEDWITHITTHATHEAWREEDWITHMRMORRISIMMEDIATELYTHATHEISTGTAKEPOSSESSIONBEFOREFICHAELMASANDSOMEOFHISSERVANTSARETOBEINTHEHOUSEBYTHEENDOFNEXTOEEYWHATISHISNAMEBINGLEQISHEMARRIEDORSINGLEOHSINGLEMYDEARTGBESUREASINGLEMANOFLARGEFORTUNEFOULORVIVETHOUSANDAYEARWHATAVINETHINGFOROURGIRLSHOWSOHGOCANITAFFECTTHEMMYDEARMRBENPNETREPLIEDHISWIVEHGOCANYOUBESOTIRESOMEYOUMUSTKNOOTHATIAMTHINKINGOFHISFARRYINWGNEOFTHEMISTHATHISDESIGNINSETTLINGHEREDESIGNPNONSENSEHOWCANYOUTALKSOBUTITISVERYLIYELYTHATHEMAYFALLINLOVEWITHONEOFTHEMANDTHEREFOREYOUMUSTVISITHIMASSOONASHECOMESISEENOOCCASIONFORTHATYOUANDTHEGILZSFAYWGORYOUMAYSENDTHEMBYTHEMSELVESWHICXHERHAPSWILLBESTILLBETTERFORASYOUAREASHANDSOMEASANYOFTHEMMRBINGLEYMIGHTLIYEYOUTHEBESTOFTHEPARTYMYDEARYOUFLATTERMEICERTAINLYHAVEHADMYSHAREOFBEAUTYBUTIDONGTPRETENDTOBEANYTHINGEXTRAORDINARYNOWWHENAOOMANHASVIMEGROWNUPDAUGHTERSSHEOUGHTTGGIVEOVERTHINKINGOFHEROWNBEAUTYINSUCHCASESAOGMANXASNOTGFTENMUCHBEAUTYTGTHINKOFBUTMYDEARYOUMUSTINDEEDWGANDSEEMRBINGLEQWHENHECOMESINTGTHENEIGXBOURHOODITISMORETHANIENGAWEFORIASSUREYOUBUTCONSIDERYOULDAUGHTERSONLYTHINKWHATANESTABLISHMENTITOOUZDBEFORONEOFTHEMSIRWILLIAMANDZADYLUCASAREDETERFINEDTGWOMERELYONTHATACCOUNTFORINGENERALYOUKNGOTHEQMISITNONEWCOMERSINDEEDYOUMUSTWOFORITWILLBEIMPOSSIBLEFORUSTGMISITHIFIVYOUDONGTYOUAREOVERSCLUPULOUSSURELYIDARESAYMRBINGLEYWILLBEVERYGLADTOSEEQOUANDIWILLSENDAFEWLINESBYYOUTGASSUREHIMOVFYHEARTQCONSENTTGHISFARRYINWOHICHEVERHECHOOSESOFTHEGIRLSTHOUGHIFUSTTHROWINAWGODOGLDFORMYLITTLELIZZYIDESIREQOUWILXZDONOSUCHTHINGLIZZYISNOTABITBETTERTHANTHEGTHERSANDIAMSURESHEISNGTHALFSOHANDSOMEASIANENORHALVSGWOODHUMOULEDASLYDIABUTYOUAREALOAYSGIMINGHERTHEPREFERENCETHEQHAVENONEOFTHEMMUCHTGRECOMMENDTHEMREPLIEDHETHEYAREALLSILLYANDIGNORANTLIKEOTHERGILZSBUTLIZZYHASSOMETHINGMOREOFQUICYNESSTHANXERSISTERSFRBENNETHGOCANYOUABUSEQOUROWNCHILDLENINSUCHAOAYYOUTAKEDELIGHTINVEXINGMEYOUHAVENOCOMPASSIONONMYPOORNERVESYOUMISTAYEMEMYDEARIHAVEAHIGHRESPECTFORYOULNERVESTHEQAREMYOZDFRIENDSIHAVEHEARDYOUMENTIONTHEMWITHCONSIDERATIONTHESETWENTYXQEARSATLEASTAHYOUDONGTKNGOWHATISUFFERBUTIHOPEQOUWILLGETOVERITANDZIMETOSEEMANYYOUNGMENOFFOULTHOUSANDAYEARCOMEINTGTHENEIGXBOURHOODITWILLBENOUSETGUSIVTOENTYSUCHSHOUZDCOMESINCEQOUWILLNGTMISITTHEMDEPENDUPONITMYDEARTHATWHENTHEREARETOENTYIWILLVISITTHEMALLMRBENNETOASSOODDAFIXTULEOFQUICYPARTSSARCASTICHUMOURRESERVEANDCAPRICETHATTHEEXPERIENCEOFTHREEANDTOENTYQEARSHADBEENINSUFXVICIENTTGMAYEHISWIVEUNDERSTANDHISCHARACTERHERFINDOASLESSDIVVICULTTGDEVELOPSHEOASAOGMANOVFEANUNDERSTANDINGLITTLEINFORMATIONANDUNCERTAINTEMPERWHENSHEWASDISCONTENTEDSHEFANCIEDHERSELFNERVOUSTHEBUSINESSOFHERLIFEOASTGWETHELDAUGHTERSMARRIEDITSSOLACEOASMISITINWANDNEWS
// IT IS A TRUTH UNIVERSALLY ACKNOWLEDGED THAT AS INGLEM AN IN POSSESSION OF A GOOD FORTUNE MUST BE IN WANT OF A WIFE
// HOWEVER LITTLE KNOWN THE FEELINGS OR VIEWS OF SUCH A MAN MAY BE ON HIS FIRST ENTERING A NEIGHBOURHOOD THIS TRUTH IS
// SO WELL FIXED IN THEMINDSOFTHESURROUNDINGFAMILIESTHATHEISCONSIDEREDASTHERIGHTFULPROPERTYOFSOMEONEOROTHEROFTHEIRDAUGHTERSMYDEARMRBENNETSAIDHISLADYTOHIMONEDAYHAVEYOUHEARDTHATNETHERFIELDPARKISLETATLASTMRBENNETREPLIEDTHATHEHADNOTBUTITISRETURNEDSHEFORMRSLONGHASIUSTBEENHEREANDSHETOLDMEALLABOUTITMRBENNETMADENOANSWERDONOTYOUWANTTOKNOWWHOHASTAKENITCRIEDHISWIFEIMPATIENTLYYOUWANTTOTELLMEANDIHAVENOOBIECTIONTOHEARINGITTHISWASINVITATIONENOUGHWHYMYDEARYOUMUSTKNOWMRSLONGSAYSTHATNETHERFIELDISTAKENBYAYOUNGMANOFLARGEFORTUNEFROMTHENORTHOFENGLANDTHATHECAMEDOWNONMONDAYINACHAISEANDFOURTOSEETHEPLACEANDWASSOMUCHDELIGHTEDWITHITTHATHEAGREEDWITHMRMORRISIMMEDIATELYTHATHEISTOTAKEPOSSESSIONBEFOREMICHAELMASANDSOMEOFHISSERVANTSARETOBEINTHEHOUSEBYTHEENDOFNEXTWEEKWHATISHISNAMEBINGLEYISHEMARRIEDORSINGLEOHSINGLEMYDEARTOBESUREASINGLEMANOFLARGEFORTUNEFOURORFIVETHOUSANDAYEARWHATAFINETHINGFOROURGIRLSHOWSOHOWCANITAFFECTTHEMMYDEARMRBENNETREPLIEDHISWIFEHOWCANYOUBESOTIRESOMEYOUMUSTKNOWTHATIAMTHINKINGOFHISMARRYINGONEOFTHEMISTHATHISDESIGNINSETTLINGHEREDESIGNNONSENSEHOWCANYOUTALKSOBUTITISVERYLIKELYTHATHEMAYFALLINLOVEWITHONEOFTHEMANDTHEREFOREYOUMUSTVISITHIMASSOONASHECOMESISEENOOCCASIONFORTHATYOUANDTHEGIRLSMAYGOORYOUMAYSENDTHEMBYTHEMSELVESWHICHPERHAPSWILLBESTILLBETTERFORASYOUAREASHANDSOMEASANYOFTHEMMRBINGLEYMIGHTLIKEYOUTHEBESTOFTHEPARTYMYDEARYOUFLATTERMEICERTAINLYHAVEHADMYSHAREOFBEAUTYBUTIDONOTPRETENDTOBEANYTHINGEXTRAORDINARYNOWWHENAWOMANHASFIVEGROWNUPDAUGHTERSSHEOUGHTTOGIVEOVERTHINKINGOFHEROWNBEAUTYINSUCHCASESAWOMANHASNOTOFTENMUCHBEAUTYTOTHINKOFBUTMYDEARYOUMUSTINDEEDGOANDSEEMRBINGLEYWHENHECOMESINTOTHENEIGHBOURHOODITISMORETHANIENGAGEFORIASSUREYOUBUTCONSIDERYOURDAUGHTERSONLYTHINKWHATANESTABLISHMENTITWOULDBEFORONEOFTHEMSIRWILLIAMANDLADYLUCASAREDETERMINEDTOGOMERELYONTHATACCOUNTFORINGENERALYOUKNOWTHEYVISITNONEWCOMERSINDEEDYOUMUSTGOFORITWILLBEIMPOSSIBLEFORUSTOVISITHIMIFYOUDONOTYOUAREOVERSCRUPULOUSSURELYIDARESAYMRBINGLEYWILLBEVERYGLADTOSEEYOUANDIWILLSENDAFEWLINESBYYOUTOASSUREHIMOFMYHEARTYCONSENTTOHISMARRYINGWHICHEVERHECHOOSESOFTHEGIRLSTHOUGHIMUSTTHROWINAGOODWORDFORMYLITTLELIZZYIDESIREYOUWILLDONOSUCHTHINGLIZZYISNOTABITBETTERTHANTHEOTHERSANDIAMSURESHEISNOTHALFSOHANDSOMEASIANENORHALFSOGOODHUMOUREDASLYDIABUTYOUAREALWAYSGIVINGHERTHEPREFERENCETHEYHAVENONEOFTHEMMUCHTORECOMMENDTHEMREPLIEDHETHEYAREALLSILLYANDIGNORANTLIKEOTHERGIRLSBUTLIZZYHASSOMETHINGMOREOFQUICKNESSTHANHERSISTERSMRBENNETHOWCANYOUABUSEYOUROWNCHILDRENINSUCHAWAYYOUTAKEDELIGHTINVEXINGMEYOUHAVENOCOMPASSIONONMYPOORNERVESYOUMISTAKEMEMYDEARIHAVEAHIGHRESPECTFORYOURNERVESTHEYAREMYOLDFRIENDSIHAVEHEARDYOUMENTIONTHEMWITHCONSIDERATIONTHESETWENTYYEARSATLEASTAHYOUDONOTKNOWWHATISUFFERBUTIHOPEYOUWILLGETOVERITANDLIVETOSEEMANYYOUNGMENOFFOURTHOUSANDAYEARCOMEINTOTHENEIGHBOURHOODITWILLBENOUSETOUSIFTWENTYSUCHSHOULDCOMESINCEYOUWILLNOTVISITTHEMDEPENDUPONITMYDEARTHATWHENTHEREARETWENTYIWILLVISITTHEMALLMRBENNETWASSOODDAMIXTUREOFQUICKPARTSSARCASTICHUMOURRESERVEANDCAPRICETHATTHEEXPERIENCEOFTHREEANDTWENTYYEARSHADBEENINSUFFICIENTTOMAKEHISWIFEUNDERSTANDHISCHARACTERHERMINDWASLESSDIFFICULTTODEVELOPSHEWASAWOMANOFMEANUNDERSTANDINGLITTLEINFORMATIONANDUNCERTAINTEMPERWHENSHEWASDISCONTENTEDSHEFANCIEDHERSELFNERVOUSTHEBUSINESSOFHERLIFEWASTOGETHERDAUGHTERSMARRIEDITSSOLACEWASVISITINGANDNEWS

string Playfair::simulatedAnnealing(const std::string &cipher, int kMax) {
    const int COUNT = 1000;
    string s = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
    string bestString;
    double bestScore = -1000000;
    std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();
    int tracker = 0;
    for(int k = 0; k < kMax; k++) {
        // Randomize initial configuration
        s = "ABCDEFGHIKLMNOPQRSTUVWXYZ";
        for(int i = 0; i < 30; i++) {
            int randIndex = firstIndex(gen);
            int randIndex2 = (randIndex + secondIndex(gen)) % 25;
            swap(s, randIndex, randIndex2);
        }
        double currentEnergy = energy(s, cipher);
        for (int T = 60; T >= 0; T -= 5) {
            for (int count = 0; count < COUNT; count++) {
                tracker += 1;
                int randIndex = firstIndex(gen);
                int randIndex2 = (randIndex + secondIndex(gen)) % 25;
                assert(randIndex != randIndex2);
                swap(s, randIndex, randIndex2);
                assert(s != "ABCDEFGHIKLMNOPQRSTUVWXYZ");
                double energyNext = energy(s, cipher);
                double dE = energyNext - currentEnergy;
                // Calculate probability
                double P;
                if (dE >= 0) {
                    P = 1;
                } else if(T == 0) {
                    P = -1;
                } else {
                    P = expf((float) ((float)dE / (float)T));
                }
                if (P > move(gen)) {
                    currentEnergy = energyNext;
                    if (currentEnergy > bestScore) {
                        bestScore = currentEnergy;
                        bestString = string(s);
                    }
                } else {
                    swap(s, randIndex, randIndex2);
                }
                if(count % 1000 == 0) {
                    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();
                    double elapsed = (double) std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count();
                    double remaining = (elapsed / tracker) * ((kMax*12*COUNT)-tracker);
                    progressBar((double)tracker/(kMax*12*COUNT), remaining, bestString, bestScore);
                }
            }
        }
    }
    return bestString;
}